BBCompSep:
    sampler: 'maximum_likelihood'
    likelihood_type: 'h&l'
    pol_channels: ['E','B']
    l_min: 30
    l_max: 300

    cmb_model:
        cmb_templates: ["./examples/data/camb_lens_nobb.dat", 
                        "./examples/data/camb_lens_r1.dat"]
        params:
            r_tensor: ['r_tensor', 'tophat', [-10., 1.e-5, 10.]]
            A_lens: ['A_lens', 'tophat', [0., 1., "inf"]]

    fg_model:
        component_1:
            name: Dust
            sed: Dust
            cl:
                EE: ClPowerLaw
                BB: ClPowerLaw
            sed_parameters:
                beta_d: ['beta_d', 'tophat', [0.1, 1.53, 10.]]
                temp_d: ['temp', 'fixed', [19.6]]
                nu0_d: ['nu0', 'fixed', [353.]]
            cl_parameters:
                EE:
                   amp_d_ee: ['amp', 'tophat', [0., 40., "inf"]]
                   alpha_d_ee: ['alpha', 'tophat', [-5., -0.3, 0.]]
                   l0_d_ee: ['ell0', 'fixed', [80.]]
                BB:
                   amp_d_bb: ['amp', 'tophat', [0., 20., "inf"]]
                   alpha_d_bb: ['alpha', 'tophat', [-5., -0.1, 0.]]
                   l0_d_bb: ['ell0', 'fixed', [80.]]
            cross:
                epsilon_ds: ['component_2', 'tophat', [-1., 0.2, 1.]]

        component_2:
            name: Synchrotron
            sed: Synchrotron
            cl:
                EE: ClPowerLaw
                BB: ClPowerLaw
            sed_parameters:
                beta_s: ['beta_pl', 'tophat', [-10., -3.2, 0.]]
                nu0_s: ['nu0', 'fixed', [23.]]
            cl_parameters:
                EE:
                    amp_s_ee: ['amp', 'tophat', [0., 8., "inf"]]
                    alpha_s_ee: ['alpha', 'tophat', [-5., -1.3, 0.]]
                    l0_s_ee: ['ell0', 'fixed', [80.]]
                BB:
                    amp_s_bb: ['amp', 'tophat', [0., 4., "inf"]]
                    alpha_s_bb: ['alpha', 'tophat', [-5., -1.1, 0.]]
                    l0_s_bb: ['ell0', 'fixed', [80.]]

    systematics:
        bandpasses:
            bandpass_1:
                phase_nu: "./examples/data/phase_3layer_lf_0.txt"
                parameters:
                    shift_1: ['shift', 'fixed', [0.]]
                    gain_1: ['gain', 'fixed', [1.]]
                    angle_1: ['angle', 'fixed', [0.]]
                    dphi1_1: ['dphi1', 'fixed', [0.]]
            bandpass_2:
                phase_nu: "./examples/data/phase_3layer_lf_0.txt"
                parameters:
                    shift_2: ['shift', 'fixed', [0.]]
                    gain_2: ['gain', 'fixed', [1.]]
                    angle_2: ['angle', 'fixed', [0.]]
                    dphi1_2: ['dphi1', 'fixed', [0.]]
            bandpass_3:
                phase_nu: "./examples/data/phase_3layer_mf_0.txt"
                parameters:
                    shift_3: ['shift', 'fixed', [0.]]
                    gain_3: ['gain', 'fixed', [1.]]
                    angle_3: ['angle', 'fixed', [0.]]
                    dphi1_3: ['dphi1', 'fixed', [0.1]]
            bandpass_4:
                phase_nu: "./examples/data/phase_3layer_mf_0.txt"
                parameters:
                    shift_4: ['shift', 'fixed', [0.]]
                    gain_4: ['gain', 'fixed', [1.]]
                    angle_4: ['angle', 'fixed', [0.]]
                    dphi1_4: ['dphi1', 'fixed', [0.1]]
            bandpass_5:
                phase_nu: "./examples/data/phase_3layer_uhf_0.txt"
                parameters:
                    shift_5: ['shift', 'fixed', [0.]]
                    gain_5: ['gain', 'fixed', [1.]]
                    angle_5: ['angle', 'fixed', [0.]]
                    dphi1_5: ['dphi1', 'fixed', [0.]]
            bandpass_6:
                phase_nu: "./examples/data/phase_3layer_uhf_0.txt"
                parameters:
                    shift_6: ['shift', 'fixed', [0.]]
                    gain_6: ['gain', 'fixed', [1.]]
                    angle_6: ['angle', 'fixed', [0.]]
                    dphi1_6: ['dphi1', 'fixed', [0.]]
